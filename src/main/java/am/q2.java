package am;

import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;

public class q2 {
    public static int numIslands(char[][] grid) {
        int ans = 0;
        int ROWS = grid.length;
        int COLS = grid[0].length;
        Queue<int[]> q = new LinkedList<>();
        for(int r = 0 ; r < ROWS; r++){
            for(int c = 0 ; c < COLS; c++){
                if (grid[r][c] == '1'){
                    ans++;
                    q.add(new int[]{ r, c});
                    while(!q.isEmpty()){
                        int[] arr = q.remove();
                        int row = arr[0];
                        int col = arr[1];
                        System.out.println("row==" + row + " col == " + col);
                        grid[row][col] = '0';
                        if (row-1 >= 0 && grid[row-1][col] == '1'){
                            q.add(new int[]{row-1,col});
                        }
                        if (row+1 < ROWS && grid[row+1][col] == '1'){
                            q.add(new int[]{row+1,col});
                        }
                        if ( col-1 >=0 && grid[row][col-1] == '1'){
                            q.add(new int[]{row ,col-1});
                        }
                        if ( col+1 < COLS && grid[row][col+1] == '1'){
                            q.add(new int[]{row ,col+1});
                        }

                    }
                }
            }
        }
        return ans;
    }

    public static void main(String[] args) {
        char[][] arr = new char[][]{ {'1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1'}, {'0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0'},{'1','0','1','1','1','0','0','1','1','0','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','0','1','1','1','1','1','1','0','1','1','1','0','1','1','1','0','1','1','1'},{'0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','1','1'},{'1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'0','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','0','1','1','1','1','1','1','1','0','1','1','1','1','1','1'},{'1','0','1','1','1','1','1','0','1','1','1','0','1','1','1','1','0','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','0'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','0','0'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'},{'1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1'}};
        System.out.println(numIslands(arr));
    }

}
